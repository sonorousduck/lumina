<?xml version="1.0"?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from
/home/telesto/ros2_ws/install/lumina/share/lumina/description/robot.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="robot">
  <!-- Specify some standard inertial calculations
  https://en.wikipedia.org/wiki/List_of_moments_of_inertia -->
  <!-- These make use of xacro's mathematical functionality -->
  <material name="orange">
    <color rgba="1 0.3 0.1 1" />
  </material>
  <material name="blue">
    <color rgba="0.2 0.2 1 1" />
  </material>
  <material name="black">
    <color rgba="0 0 0 1" />
  </material>
  <material name="red">
    <color rgba="1 0 0 1" />
  </material>
  <material name="white">
    <color rgba="1 1 1 1" />
  </material>
  <!-- BASE LINK -->
  <link name="base_link">

  </link>
  <joint name="chassis_joint" type="fixed">
    <parent link="base_link" />
    <child link="chassis" />
    <!-- Setting just behind the base_link (center of the motors) TODO: Measure this better -->
    <origin xyz="-0.1 0 0" />
  </joint>
  <!-- CHASSIS LINK -->
  <link name="chassis">
    <visual>
      <!-- We are going 1/2 its length in x and z to move the visuals to where we said it
            should be in the chassis -->
      <origin rpy="0.0 0.0 0.0" xyz="0.18 0.0 0.08" />
      <geometry>
        <box size="0.24 0.24 0.18" />
      </geometry>
      <material name="white" />
    </visual>
    <collision>
      <!-- We are going 1/2 its length in x and z to move the visuals to where we said it
            should be in the chassis -->
      <origin rpy="0.0 0.0 0.0" xyz="0.18 0.0 0.08" />
      <geometry>
        <box size="0.24 0.24 0.16" />
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0.0 0.0 0.0" xyz="0.18 0.0 0.08" />
      <mass value="0.5" />
      <inertia ixx="0.0034666666666666665" ixy="0.0" ixz="0.0" iyy="0.0034666666666666665" iyz="0.0"
        izz="0.0048" />
    </inertial>
  </link>
  <gazebo reference="chassis">
    <material>
      Gazebo/White
    </material>
  </gazebo>
  <!-- LEFT WHEEL LINK -->
  <joint name="left_wheel_joint" type="continuous">
    <parent link="base_link" />
    <child link="left_wheel" />
    <origin rpy="-1.5707963267948966 0.0 0.0" xyz="0.0 0.126 0.0" />
    <axis xyz="0 0 1" />
  </joint>
  <link name="left_wheel">
    <visual>
      <geometry>
        <cylinder length="0.026" radius="0.0325" />
      </geometry>
      <material name="blue" />
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.026" radius="0.0325" />
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0" />
      <mass value="0.1" />
      <inertia ixx="3.2039583333333334e-05" ixy="0.0" ixz="0.0" iyy="3.2039583333333334e-05"
        iyz="0.0" izz="5.281250000000001e-05" />
    </inertial>
  </link>
  <gazebo reference="left_wheel">
    <material>
      Gazebo/Blue
    </material>
  </gazebo>
  <!-- RIGHT WHEEL LINK -->
  <joint name="right_wheel_joint" type="continuous">
    <parent link="base_link" />
    <child link="right_wheel" />
    <origin rpy="1.5707963267948966 0.0 0.0" xyz="0.0 -0.126 0.0" />
    <axis xyz="0 0 -1" />
  </joint>
  <link name="right_wheel">
    <visual>
      <geometry>
        <cylinder length="0.026" radius="0.0325" />
      </geometry>
      <material name="blue" />
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.026" radius="0.0325" />
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0" />
      <mass value="0.1" />
      <inertia ixx="3.2039583333333334e-05" ixy="0.0" ixz="0.0" iyy="3.2039583333333334e-05"
        iyz="0.0" izz="5.281250000000001e-05" />
    </inertial>
  </link>
  <gazebo reference="right_wheel">
    <material>
      Gazebo/Blue
    </material>
  </gazebo>
  <!-- CASTER WHEEL LINK -->
  <joint name="caster_wheel_joint" type="fixed">
    <parent link="chassis" />
    <child link="caster_wheel" />
    <origin rpy="0.0 0.0 0.0" xyz="0.248 0.0 0.0" />
  </joint>
  <link name="caster_wheel">
    <visual>
      <geometry>
        <sphere radius="0.03" />
      </geometry>
      <material name="black" />
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.03" />
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0" />
      <mass value="0.1" />
      <inertia ixx="3.600000000000001e-05" ixy="0.0" ixz="0.0" iyy="3.600000000000001e-05" iyz="0.0"
        izz="3.600000000000001e-05" />
    </inertial>
  </link>
  <gazebo reference="caster_wheel">
    <material>
      Gazebo/Black
    </material>
    <mu1 value="0.001" />
    <mu2 value="0.001" />
  </gazebo>
  <!-- <xacro:unless value="$(arg sim_mode)">
        <ros2_control name="RealRobot" type="system">
            <hardware>
                <plugin>diffdrive_arduino/DiffDriveArduinoHardware</plugin>
                <param name="left_wheel_name">left_wheel_joint</param>
                <param name="right_wheel_name">right_wheel_joint</param>
                <param name="loop_rate">30</param>
                <param name="device">/dev/ttyUSB0</param>
                <param name="baud_rate">57600</param>
                <param name="timeout_ms">1000</param>
                <param name="enc_counts_per_rev">3436</param>
            </hardware>
            <joint name="left_wheel_joint">
                <command_interface name="velocity">
                    <param name="min">-10</param>
                    <param name="max">10</param>
                </command_interface>
                <state_interface name="position"/>
                <state_interface name="velocity"/>
            </joint>
            <joint name="right_wheel_joint">
                <command_interface name="velocity">
                    <param name="min">-10</param>
                    <param name="max">10</param>
                </command_interface>
                <state_interface name="position"/>
                <state_interface name="velocity"/>
            </joint>
        </ros2_control>
    </xacro:unless> -->
  <!-- <xacro:if value="$(arg sim_mode)"> -->
  <ros2_control name="GazeboSystem" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>
    <joint name="left_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-10</param>
        <param name="max">10</param>
      </command_interface>
      <state_interface name="velocity" />
      <state_interface name="position" />
    </joint>
    <joint name="right_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-10</param>
        <param name="max">10</param>
      </command_interface>
      <state_interface name="velocity" />
      <state_interface name="position" />
    </joint>
  </ros2_control>
  <!-- </xacro:if> -->
  <gazebo>
    <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
      <parameters>/home/telesto/ros2_ws/install/lumina/share/lumina/config/my_controllers.yaml</parameters>
      <!-- <parameters>$(find articubot_one)/config/gaz_ros2_ctl_use_sim.yaml</parameters> -->
    </plugin>
  </gazebo>
  <joint name="laser_joint" type="fixed">
    <parent link="chassis" />
    <child link="laser_frame" />
    <origin rpy="0.0 0.0 0.0" xyz="0.20 0.0 0.22" />
  </joint>
  <link name="laser_frame">
    <visual>
      <geometry>
        <cylinder length="0.026" radius="0.0325" />
      </geometry>
      <material name="red" />
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.026" radius="0.0325" />
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0" />
      <mass value="0.1" />
      <inertia ixx="3.2039583333333334e-05" ixy="0.0" ixz="0.0" iyy="3.2039583333333334e-05"
        iyz="0.0" izz="5.281250000000001e-05" />
    </inertial>
  </link>
  <gazebo reference="laser_frame">
    <material>Gazebo/Black</material>
    <sensor name="laser" type="ray">
      <pose> 0 0 0 0 0 0 </pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <min_angle>-3.14</min_angle>
            <max_angle>3.14</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.3</min>
          <max>12</max>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="laser_controller">
        <ros>
          <argument>~/out:=scan</argument>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>laser_frame</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <!-- CAMERA JOINT + LINK -->
  <joint name="camera_joint" type="fixed">
    <parent link="chassis" />
    <child link="camera_link" />
    <!-- <origin xyz="0.32 0.0 0.105" rpy="0.0 0.0 0.0"/> -->
    <origin rpy="0.0 0.19634954084936207 0.0" xyz="0.32 0.0 0.105" />
  </joint>
  <link name="camera_link">
    <visual>
      <geometry>
        <box size="0.01 0.03 0.03" />
      </geometry>
      <material name="red" />
    </visual>
    <collision>
      <geometry>
        <box size="0.01 0.03 0.03" />
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0 0.0" />
      <mass value="0.05" />
      <inertia ixx="5.041666666666666e-05" ixy="0.0" ixz="0.0" iyy="0.0004770833333333333" iyz="0.0"
        izz="0.00042666666666666667" />
    </inertial>
  </link>
  <!-- END CAMERA JOINT + LINK -->
  <!-- CAMERA OPTICAL JOINT + LINK -->
  <joint name="camera_optical_joint" type="fixed">
    <parent link="camera_link" />
    <child link="camera_link_optical" />
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0" />
  </joint>
  <link name="camera_link_optical">

  </link>
  <!-- END CAMERA OPTICAL JOINT + LINK -->
  <gazebo reference="camera_link">
    <material>Gazebo/Red</material>
    <sensor name="camera" type="camera">
      <pose> 0 0 0 0 0 0 </pose>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <camera>
        <horizontal_fov>1.089</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <frame_name>camera_link_optical</frame_name>
      </plugin>
    </sensor>
  </gazebo>
</robot>